@model List<DataAccess.Common.IncomePerMonthByEmployeeVm>;
@{
    Layout = "_Layout";
    ViewData["employees"] = "active";
}
@section Scripts{
    <script src="~/Limitless/global_assets/js/plugins/visualization/echarts/echarts.min.js"></script>
    <script src="~/Limitless/global_assets/js/demo_charts/echarts/light/bars/columns_basic.js"></script>
}

<div class="card">
    <div class="card-header header-elements-inline">
        <h5 class="card-title font-weight-bold">İşçilər və Vəzifələr Bölməsi</h5>
    </div>

    <div class="card-body">
        <ul class="nav nav-tabs nav-tabs-highlight">
            <li class="nav-item"><a asp-controller="Employees" asp-action="Index" asp-route-page="1" class="nav-link active">İşçilər</a></li>
            <li class="nav-item"><a asp-controller="Positions" asp-action="Index" asp-route-page="1" class="nav-link ">Vəzifələr</a></li>
            <li class="nav-item"><a asp-controller="EmployeeFaults" asp-action="Index" asp-route-page="1" class="nav-link">Xətalar</a></li>
            <li class="nav-item"><a asp-controller="EmployeePunishments" asp-action="Index" asp-route-page="1" class="nav-link">Cəzalar</a></li>
        </ul>
        <div class="d-md-flex align-items-md-center flex-md-wrap text-center text-md-left">
            <ul class="list-inline list-inline-condensed mb-0">
                <li class="list-inline-item dropdown">
                    <a asp-action="Add" asp-controller="Employees" class="btn btn-link text-default"><i class="icon-add"></i> Yeni <strong>işçi</strong> əlavə et</a>
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header header-elements-inline">
        <h5 class="card-title">Gəlirlər</h5>
        <div class="header-elements">
        </div>
    </div>

    <div class="card-body">
        <div class="chart-container">
            <div class="chart has-fixed-height" id="columns_basic"></div>
        </div>
    </div>
</div>
<!-- /basic columns -->


<script type="text/javascript">

    var incomesJson = @Json.Serialize(Model);
    var incomes = [];
    incomesJson.forEach(item => {
            incomes.push(item.total);
        }
    );


    var EchartsColumnsBasicLight = function () {


        //
        // Setup module components
        //

        // Basic column chart
        var _columnsBasicLightExample = function () {
            if (typeof echarts == 'undefined') {
                console.warn('Warning - echarts.min.js is not loaded.');
                return;
            }

            // Define element
            var columns_basic_element = document.getElementById('columns_basic');


            //
            // Charts configuration
            //

            if (columns_basic_element) {

                // Initialize chart
                var columns_basic = echarts.init(columns_basic_element);


                //
                // Chart config
                //

                // Options
                columns_basic.setOption({

                    // Define colors
                    color: ['#2ec7c9', '#b6a2de', '#5ab1ef', '#ffb980', '#d87a80'],

                    // Global text styles
                    textStyle: {
                        fontFamily: 'Roboto, Arial, Verdana, sans-serif',
                        fontSize: 13
                    },

                    // Chart animation duration
                    animationDuration: 750,

                    // Setup grid
                    grid: {
                        left: 0,
                        right: 40,
                        top: 35,
                        bottom: 0,
                        containLabel: true
                    },

                    // Add legend
                    legend: {
                        data: ['Gəlirlər'],
                        itemHeight: 8,
                        itemGap: 20,
                        textStyle: {
                            padding: [0, 5]
                        }
                    },

                    // Add tooltip
                    tooltip: {
                        trigger: 'axis',
                        backgroundColor: 'rgba(0,0,0,0.75)',
                        padding: [10, 15],
                        textStyle: {
                            fontSize: 13,
                            fontFamily: 'Roboto, sans-serif'
                        }
                    },

                    // Horizontal axis
                    xAxis: [{
                        type: 'category',
                        data: ['Yan', 'Fev', 'Mar', 'Apr', 'May', 'İyun', 'İyul', 'Avg', 'Sen', 'Okt', 'Nov', 'Dek'],
                        axisLabel: {
                            color: '#333'
                        },
                        axisLine: {
                            lineStyle: {
                                color: '#999'
                            }
                        },
                        splitLine: {
                            show: true,
                            lineStyle: {
                                color: '#eee',
                                type: 'dashed'
                            }
                        }
                    }],

                    // Vertical axis
                    yAxis: [{
                        type: 'value',
                        axisLabel: {
                            color: '#333'
                        },
                        axisLine: {
                            lineStyle: {
                                color: '#999'
                            }
                        },
                        splitLine: {
                            lineStyle: {
                                color: ['#eee']
                            }
                        },
                        splitArea: {
                            show: true,
                            areaStyle: {
                                color: ['rgba(250,250,250,0.1)', 'rgba(0,0,0,0.01)']
                            }
                        }
                    }],

                    // Add series
                    series: [
                        {
                            name: 'Gəlirlər',
                            type: 'bar',
                            data: incomes,
                            itemStyle: {
                                normal: {
                                    label: {
                                        show: true,
                                        position: 'top',
                                        textStyle: {
                                            fontWeight: 500
                                        }
                                    }
                                }
                            }
                        }
                    ]
                });
            }


            //
            // Resize charts
            //

            // Resize function
            var triggerChartResize = function () {
                columns_basic_element && columns_basic.resize();
            };

            // On sidebar width change
            var sidebarToggle = document.querySelector('.sidebar-control');
            sidebarToggle && sidebarToggle.addEventListener('click', triggerChartResize);

            // On window resize
            var resizeCharts;
            window.addEventListener('resize', function () {
                clearTimeout(resizeCharts);
                resizeCharts = setTimeout(function () {
                    triggerChartResize();
                }, 200);
            });
        };


        //
        // Return objects assigned to module
        //

        return {
            init: function () {
                _columnsBasicLightExample();
            }
        }
    }();


    // Initialize module
    // ------------------------------

    document.addEventListener('DOMContentLoaded', function () {
        EchartsColumnsBasicLight.init();
    });

</script>